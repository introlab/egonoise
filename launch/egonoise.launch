<launch>
    <!-- Source name
    alsa_input.usb-SEEED_ReSpeaker_4_Mic_Array__UAC1.0_-00.multichannel-input
    pulse_audio_source" default="alsa_input.usb-IntRoLab_16SoundsUSB_Audio_2.0-00.multichannel-input
    alsa_output.pci-0000_00_1f.3.analog-stereo
    -->

    <!-- ARGUMENTS -->
    <arg name="audio_capture" default="false"/>
    <arg name="merge_speech_noise" default="false"/>
    <arg name="calibration_run" default="false"/>
    <arg name="egonoise_node" default="false"/>
    <arg name="egonoise_run" default="false"/>
    <arg name="audio_listen" default="false"/>
    <arg name="merging" default="false"/>

    <arg name="pulse_audio_sink" default="alsa_output.pci-0000_00_1f.3.analog-stereo"/>
    <arg name="use_echo_cancellation" default="false"/>
    <arg name="echo_cancellation_dest" default="false"/>
    <arg name="dict_path" default="/home/pierre-olivier/catkin_ws/src/egonoise/src/database/"/>
    <arg name="channel_count_in" default="16"/>
    <arg name="channel_count_out" default="16"/>
    <arg name="sampling_frequency" default="16000"/>
    <arg name="frame_sample_count" default="8000"/>
    <arg name="frame_size" default="512"/>
    <arg name="format" default="signed_32"/>
    <arg name="overlap" default="1.5"/>
    <arg name="hop_length" default="64"/>
    <arg name="bag_speech" default="/home/pierre-olivier/catkin_ws/src/bag/speech16mics.bag"/>
    <arg name="bag_noise" default="/home/pierre-olivier/catkin_ws/src/bag/whitenoise_ns.bag"/>
    <arg name="bag_calibration" default="/home/pierre-olivier/catkin_ws/src/bag/noise16mics.bag"/>

    <!-- Global parameter -->

    <!-- AUDIO CAPTURE -->
    <node pkg="audio_utils" type="capture_node" name="capture_node" output="screen" launch-prefix="bash -c 'sleep 5; $0 $1 $2 $3 $4 $5 $6' " if="$(arg audio_capture)">
        <param name="backend" value="pulse_audio"/>
        <param name="format" value="$(arg format)"/>
        <param name="channel_count" value="$(arg channel_count_in)"/>
        <param name="sampling_frequency" value="$(arg sampling_frequency)"/>
        <param name="frame_sample_count" value="$(arg frame_sample_count)"/>
        <param name="merge" value="false"/>
        <param name="gain" value="1.0"/>

        <param if="$(eval arg('channel_count_in')==6)" name="device" value="alsa_input.usb-SEEED_ReSpeaker_4_Mic_Array__UAC1.0_-00.multichannel-input"/>
        <param if="$(eval arg('channel_count_in')==16)" name="device" value="alsa_input.usb-IntRoLab_16SoundsUSB_Audio_2.0-00.multichannel-input"/>

        <rosparam if="$(eval arg('channel_count_in')==16)" param="channel_map">
            [front-left, front-right, rear-left, rear-right, front-center, lfe, side-left, side-right, aux0, aux1, aux2, aux3, aux4, aux5, aux6, aux7]
        </rosparam>
    </node>

    <!-- CALIBRATION RUN -->
    <node pkg="egonoise" type="calibration_run.py" name="calibration_run" output="screen" if="$(arg calibration_run)">
        <param name="input_format" value="$(arg format)"/>
        <param name="sampling_frequency" value="$(arg sampling_frequency)"/>
        <param name="database_path" value="$(arg dict_path)"/>
        <param name="bag_name" value="$(arg bag_calibration)"/>
        <param name="frame_size" value="$(arg frame_size)"/>
        <param name="overlap" value="$(arg overlap)"/>

        <rosparam if="$(eval arg('channel_count_in')==6)" param="channel_keep">[1, 2, 3, 4]</rosparam>
        <rosparam if="$(eval arg('channel_count_in')==16)" param="channel_keep">[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]</rosparam>
    </node>

    <!-- EGONOISE NODE -->
    <node pkg="egonoise" type="egonoise_node.py" name="egonoise_node" output="screen" if ="$(arg egonoise_node)">
        <param name="input_format" value="$(arg format)"/>
        <param name="output_format" value="$(arg format)"/>
        <param name="dict_path" value="$(arg dict_path)"/>
        <param name="frame_size" value="$(arg frame_size)"/>
        <param name="channel_count" value="$(arg channel_count_in)"/>
        <param name="overlap" value="$(arg overlap)"/>
        <param name="hop_length" value="$(arg hop_length)"/>

        <rosparam if="$(eval arg('channel_count_in')==6)" param="channel_keep">[1, 2, 3, 4]</rosparam>
        <rosparam if="$(eval arg('channel_count_in')==16)" param="channel_keep">[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]</rosparam>
    </node>

    <!-- EGONOISE  RUN -->
    <node pkg="egonoise" type="egonoise_run.py" name="egonoise_run" output="screen" if ="$(arg egonoise_run)">
        <param name="input_format" value="$(arg format)"/>
        <param name="output_format" value="$(arg format)"/>
        <param name="dict_path" value="$(arg dict_path)"/>
        <param name="frame_size" value="$(arg frame_size)"/>
        <param name="channel_count" value="$(arg channel_count_in)"/>
        <param name="publish" value="$(arg audio_listen)"/>
        <param name="overlap" value="$(arg overlap)"/>
        <param name="hop_length" value="$(arg hop_length)"/>

        <param name="bag_noise" value="$(arg bag_noise)"/>
        <param name="bag_speech" value="$(arg bag_speech)"/>

        <rosparam if="$(eval arg('channel_count_in')==6)" param="channel_keep">[1, 2, 3, 4]</rosparam>
        <rosparam if="$(eval arg('channel_count_in')==16)" param="channel_keep">[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]</rosparam>
    </node>

    <!-- AUDIO LISTEN -->
    <node pkg="audio_utils" type="playback_node" name="playback_node" respawn="true" if="$(arg audio_listen)">
        <param name="backend" value="pulse_audio"/>
        <param name="device" value="$(arg pulse_audio_sink)"/>
        <param name="format" value="$(arg format)"/>
        <param name="channel_count" value="$(arg channel_count_out)"/>
        <param name="sampling_frequency" value="$(arg sampling_frequency)"/>
        <param name="frame_sample_count" value="$(arg frame_sample_count)"/>

        <!--remap from="audio_in" to="audio_out"/-->
    </node>

    <!-- MERGING -->
    <node pkg="egonoise" type="merging_node.py" name="merging_node" respawn="true" if="$(arg merging)">
        <param name="format" value="$(arg format)"/>
    </node>

</launch>